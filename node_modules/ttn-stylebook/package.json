{
  "_args": [
    [
      {
        "raw": "thethingsnetwork/ttn-stylebook",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "thethingsnetwork/ttn-stylebook",
        "spec": "github:thethingsnetwork/ttn-stylebook",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:thethingsnetwork/ttn-stylebook.git",
          "sshUrl": "git+ssh://git@github.com/thethingsnetwork/ttn-stylebook.git",
          "httpsUrl": "git+https://github.com/thethingsnetwork/ttn-stylebook.git",
          "gitUrl": "git://github.com/thethingsnetwork/ttn-stylebook.git",
          "shortcut": "github:thethingsnetwork/ttn-stylebook",
          "directUrl": "https://raw.githubusercontent.com/thethingsnetwork/ttn-stylebook/master/package.json"
        }
      },
      "/Users/fokkezb/Documents/TTN/Code/docs"
    ]
  ],
  "_from": "thethingsnetwork/ttn-stylebook",
  "_id": "ttn-stylebook@1.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/ttn-stylebook",
  "_phantomChildren": {},
  "_requested": {
    "raw": "thethingsnetwork/ttn-stylebook",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "thethingsnetwork/ttn-stylebook",
    "spec": "github:thethingsnetwork/ttn-stylebook",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:thethingsnetwork/ttn-stylebook.git",
      "sshUrl": "git+ssh://git@github.com/thethingsnetwork/ttn-stylebook.git",
      "httpsUrl": "git+https://github.com/thethingsnetwork/ttn-stylebook.git",
      "gitUrl": "git://github.com/thethingsnetwork/ttn-stylebook.git",
      "shortcut": "github:thethingsnetwork/ttn-stylebook",
      "directUrl": "https://raw.githubusercontent.com/thethingsnetwork/ttn-stylebook/master/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "git://github.com/thethingsnetwork/ttn-stylebook.git#ad81237ef9763a6cf59ee562bd393fdb58fe6b98",
  "_shasum": "5a16ae297585fc2b5331c6d317623ac8494b673d",
  "_shrinkwrap": null,
  "_spec": "thethingsnetwork/ttn-stylebook",
  "_where": "/Users/fokkezb/Documents/TTN/Code/docs",
  "author": {
    "name": "Fokke Zandbergen, The Things Network"
  },
  "dependencies": {},
  "description": "Styles for The Things Network websites",
  "devDependencies": {
    "async": "^2.0.1",
    "bootstrap": "^3.3.7",
    "bootstrap-sass": "^3.3.7",
    "bootstrap-styl": "^5.0.7",
    "del": "^2.2.2",
    "fs-extra": "^0.30.0",
    "fs-readdir-recursive": "^1.0.0",
    "less2stylus": "^0.1.0",
    "pre-commit": "^1.1.3",
    "replace": "^0.3.0",
    "rimraf": "^2.5.4"
  },
  "gitHead": "ad81237ef9763a6cf59ee562bd393fdb58fe6b98",
  "keywords": [
    "ttn",
    "sass",
    "scss",
    "less",
    "stylus"
  ],
  "license": "MIT",
  "name": "ttn-stylebook",
  "optionalDependencies": {},
  "pre-commit": [
    "convert",
    "add"
  ],
  "private": true,
  "readme": "# The Things Network Stylebook\n\nThe goal of this project is to contain a shared set of styles and related assets for use on several website properties of [The Things Network](https://www.thethingsnetwork.org). It does not enforce a particular CSS preprocessor or build flow and allows us to adopt global styles step by step.\n\n## Why Less?\nThe [source stylesheets](src) are in [Less](http://lesscss.org) because it was [the only format](https://csspre.com/convert/) that can be automatically converted to [SCSS](http://sass-lang.com) and [Stylus](http://stylus-lang.com).\n\n## Documentation\nThe [docs](docs) folder uses [dist/scss](dist/scss) to demonstrate the styles and is a usage example at the same time. You can view the documentation via [GitHub Pages](https://thethingsnetwork.github.io/ttn-stylebook/).\n\n## Usage\n\n1. Depend on the repository, e.g. via NPM:\n\n\t```bash\n\tnpm install --save thethingsnetwork/ttn-stylebook\n\t```\n\t\n\t> You can also [lock in to a certain branch or commit](https://docs.npmjs.com/files/package.json#github-urls).\n\t\n2. Import a stylesheet in the language you use:\n\n\t```css\n\t@import 'scss/variables';\n\t\n\tbody {\n\t\tcolor: $ttn-color-brand;\n\t}\n\t```\n\t\n\t> This example assumes you run Sass with `--load-path node_modules/ttn-stylebook/dist/scss` to not have to give the full path on every import.\n\t\n### Stylesheets\nThere are different strategies for using the stylesheets:\n\n* [dist/*/ttn/variables](dist/less/ttn/variables.less): Just our variables for colors etc. For projects where you want to have full control over the actual styles.\n* [dist/*/ttn/ttn](dist/less/ttn/ttn.less): The above plus styles for custom components.\n* [dist/*/ttn/bootstrap-variables.less](dist/less/ttn/bootstrap-variables.less): Our variables plus those of Bootstrap, customised. For projects where you want to make further modifications to the Bootstrap variables before importing (maybe just parts of) Bootstrap.\n\t* You can import parts of Bootstrap from [dist/*/bootstrap](dist/less/bootstrap). Be aware that the Sass version has components wrapped in another [bootstrap folder](dist/scss/bootstrap/bootstrap).\n* [dist/*/ttn/bootstrap.less](dist/less/ttn/bootstrap.less): All of the above plus all of Bootstrap, customised.\n\t* This also imports [dist/*/ttn/bootstrap-overrides](dist/less/ttn/bootstrap-overrides.less) for customisations of Bootstrap that cannot be done via variables.\n\n## Development\n\n1. [Install Ruby](https://www.ruby-lang.org/en/downloads/)\n2. Install [Bundler](http://bundler.io/):\n\t\n\t```bash\n\t$ gem install bundler\n\t```\n\n3. Install Ruby dependencies via Bundler:\n\n\t```bash\n\t$ bundle install\n\t```\n\n4. Install [Node.js and NPM](https://nodejs.org/).\n\n5. Install Node.js dependencies via NPM:\n\n  ```basg\n  $ npm install\n  ```\n  \n6. Update styles in [src](src) using [Less](http://lesscss.org).\n\n7. Run `convert` to update [dist](dist) with Less, SCSS, Stylus and CSS versions and process [docs/src](docs/src).\n\n\t```bash\n\t$ npm run convert\n\t```\n\n> *NOTE:* Running `npm install` will overwrite the git pre-commit hook to execute [npm run convert & npm run add](package.json#L10) automagically on every commit so you can ignore step 7.\n\n## Conventions\n\n* Variables, selectors and mixins should start with `ttn-` so that they do not conflict with other frameworks or custom styles on the site.\n\n# TODO\n\n* Add more base variables.\n* Add styles for custom components.\n* Include TTN assets like fonts and logos.\n* Maybe even include common templates and scripts?\n",
  "readmeFilename": "README.md",
  "scripts": {
    "add": "git add .",
    "convert": "node bin/convert",
    "docs": "node bin/convert docs",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.0"
}
